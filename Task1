import os
import json
import csv
from pathlib import Path
import pickle




def walk_directory(directory, parent=None) -> list:
    """Функция для обхода содержимого дирректории и анализа результата поиска"""
    result = []

    # Получаем содержимое текущей директории
    items = os.listdir(directory)

    total_size = 0  # Переменная для хранения общего размера директории

    for item in items:
        full_path = os.path.join(directory, item)

        if os.path.isdir(full_path):  # Если это директория
            entry = {
                'type': 'directory', # Присвоение тип
                'name': item, # Название директории
                'path': full_path, # полный путь до директории
                'parent': Path(directory).name
            }
            result.append(entry)

            # Рекурсивный вызов для обработки вложенных директорий
            sub_result, sub_total_size = walk_directory(full_path, entry['name'])
            result.extend(sub_result)
            total_size += sub_total_size

        else:  # Если это файл
            size = os.path.getsize(full_path)  # Определяем размер файла
            entry = {
                'type': 'file', # Присвоение тип
                'name': item, # Название файла
                'path': full_path, # полный путь до файла
                'parent': Path(directory).name, # Добавляю родительскую дирректорию (соотвестствует name родителя)
                'size': size # Добавляю размер файла
            }
            result.append(entry)
            total_size += size


    # result['total_size'] = total_size
    print(result[0])
    result[0]['total_size'] = total_size # Добавляем общий размер директории

    return result, total_size


def save_to_json(data, filename):
    with open(filename, 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=4, ensure_ascii=False)


def save_to_csv(data, filename):
    fieldnames = ['type', 'name', 'path', 'parent']

    with open(filename, 'w', newline='', encoding='utf-8') as f:
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        writer.writeheader()
        writer.writerows(data)


def save_to_pickle(data, filename):
    with open(filename, 'wb') as f:
        pickle.dump(data, f)


if __name__ == "__main__":
    input_directory = r'D:\GeekBrains' # Дирректория для анализа ее содержимого
    output_json_file = 'output.json'
    output_csv_file = 'output.csv'
    output_pickle_file = 'output.pkl'

    data = walk_directory(input_directory)

    # print(data)

    # save_to_json(data, 'output.json')
    # save_to_csv(data, 'output.csv')
    # save_to_pickle(data, 'output.pkl')
